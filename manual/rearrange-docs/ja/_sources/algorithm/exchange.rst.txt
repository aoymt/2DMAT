交換モンテカルロ法 ``exchange``
===================================

``exchange`` はレプリカ交換モンテカルロ法を用いてパラメータ探索を行う ``Algorithm`` です。

前準備
~~~~~~~~

あらかじめ `mpi4py <https://mpi4py.readthedocs.io/en/stable/>`_ をインストールしておく必要があります。::

  python3 -m pip install mpi4py

入力パラメータ
~~~~~~~~~~~~~~~~~~~

サブセクション ``param`` と ``exchange`` を持ちます。

[``param``] セクション
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

- ``initial_list``

  形式: 実数型のリスト。長さはdimensionの値と一致させます。

  説明: パラメータの初期値。 定義しなかった場合は一様ランダムに初期化されます。

- ``unit_list``

  形式: 実数型のリスト。長さはdimensionの値と一致させます。

  説明: 各パラメータの単位。
        探索アルゴリズム中では、各パラメータをそれぞれこれらの値で割ることで、
        簡易的な無次元化・正規化を行います。
        定義しなかった場合にはすべての次元で 1.0 となります。

- ``min_list``

  形式: 実数型のリスト。長さはdimensionの値と一致させます。

  説明: パラメータが取りうる最小値。

- ``max_list``

  形式: 実数型のリスト。長さはdimensionの値と一致させます。

  説明: パラメータが取りうる最大値。  


[``exchange``] セクション
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

- ``numsteps``

  形式: 整数値。

  説明: モンテカルロ更新を行う回数。

- ``numsteps_exchange``

  形式: 整数値。

  説明: 「温度」のレプリカ交換を行う頻度。この回数だけモンテカルロ更新を行ったらレプリカ交換を実行します。

- ``Tmin``

  形式: 実数値。 (default: 0.1)

  説明: 「温度」の最小値。

- ``Tmax``

  形式: 実数値。 (default: 10.0)

  説明: 「温度」の最大値。

- ``Tlogspace``

  形式: 真偽値。 (default: true)

  説明: 「温度」を各レプリカに割り当てる際に、対数空間で等分割するか否かを指定します。
        true のときは対数空間で等分割します。



出力ファイル
~~~~~~~~~~~~~~~~~~~~~

``RANK/trial.txt``
^^^^^^^^^^^^^^^^^^^^^
各レプリカについて、モンテカルロサンプリングで提案されたパラメータと、対応する目的関数の値です。
1列目にステップ数、2列目にレプリカの温度、3列目に目的変数の値、4列目以降にパラメータが記載されます。

.. code-block::

    # step T fx z1 z2
    0 0.004999999999999999 0.07830821484593968 3.682008067401509 3.9502750191292586 
    1 0.004999999999999999 0.0758494287185766 2.811346329442423 3.691101784194861 
    2 0.004999999999999999 0.08566823949124412 3.606664760390988 3.2093903670436497 
    3 0.004999999999999999 0.06273922648753057 4.330900869594549 4.311333132184154 


``RANK/result.txt``
^^^^^^^^^^^^^^^^^^^^^
各レプリカについて、モンテカルロサンプリングで生成されたパラメータと、対応する目的関数の値です。
``trial.txt`` と同一の書式です。

.. code-block::

    # step T fx z1 z2
    0 0.004999999999999999 0.07830821484593968 3.682008067401509 3.9502750191292586 
    1 0.004999999999999999 0.07830821484593968 3.682008067401509 3.9502750191292586 
    2 0.004999999999999999 0.07830821484593968 3.682008067401509 3.9502750191292586 
    3 0.004999999999999999 0.06273922648753057 4.330900869594549 4.311333132184154 


``best_result.txt``
^^^^^^^^^^^^^^^^^^^^
サンプリングされた全データのうち、目的関数の値が最小となったパラメータと、対応する目的関数の値です。

.. code-block::

    nprocs = 4
    rank = 2
    step = 65
    fx = 0.008233957976993406
    z1 = 4.221129370933539
    z2 = 5.139591716517661
